{
    "sourceFile": "dataAPI/routes/apostador.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1642533486380,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1642533486380,
            "name": "Commit-0",
            "content": "var express = require('express');\r\nvar router = express.Router();\r\nvar Apostador = require('../controllers/apostador')\r\nvar bcrypt = require('bcryptjs')\r\nvar sql = require('../models/db.js');\r\n\r\nrouter.get('/getAll/',function(req,res){\r\n    Apostador.listar()\r\n        .then(apostador => res.jsonp(apostador))\r\n        .catch(erro => res.status(500).jsonp(erro))\r\n    });\r\n\r\nrouter.get('/getUser/:email',function(req,res){\r\n     Apostador.get(req.params.email)\r\n        .then(apostador => res.jsonp(apostador))\r\n        .catch(erro => res.status(500).jsonp(erro))\r\n});\r\n\r\nrouter.get('/gettrans/:idApostador',function(req,res){\r\n    Apostador.gettrans(req.params.idApostador)\r\n        .then(apostador => res.jsonp(apostador))\r\n        .catch(erro => res.status(500).jsonp(erro))\r\n});\r\n\r\nrouter.post('/create/',function(req,res){\r\n    Apostador.put(req.body)\r\n            .then(apostador => res.jsonp(apostador))\r\n            .catch(erro => res.status(500).jsonp(erro))\r\n});\r\n\r\nrouter.post('/createtrans/',function(req,res){\r\n    Apostador.createtrans(req.body)\r\n        .then(apostador => res.jsonp(apostador))\r\n        .catch(erro => res.status(500).jsonp(erro))\r\n});\r\n\r\nrouter.post('/login/',function(req,res){\r\n    Apostador.login(req.body)\r\n        .then(dados =>{\r\n            var result = {\r\n                login : false,\r\n                message : \"Utilizador nÃ£o existe.\"\r\n            }\r\n            if(dados.length!=0){\r\n                if(bcrypt.compareSync(req.body.password,dados[0].password)){\r\n                    console.log(\"haha\")\r\n                    sql.getConnection(function(err,conn){\r\n                        Apostador.get(dados[0].email,conn)\r\n                        .then(async apostador =>{\r\n                            console.log(\"entrei apostador\")\r\n                            var expirationDate = new Date();\r\n                            expirationDate.setHours(expirationDate.getHours() + 8);\r\n                            console.log(expirationDate)\r\n                            result.login = true\r\n                            result.message = \"Credenciais corretas.\"\r\n                            result.apostador = apostador\r\n                            result.expirationDate = expirationDate;\r\n                            result.data = dados;\r\n                            console.log(result);\r\n                            res.jsonp(result)\r\n                        })\r\n                        .catch(error => {console.log(\"Entrei no erro\")\r\n                        res.status(500).jsonp(error)})\r\n                        conn.release();\r\n                        if(err) throw err;\r\n                    })\r\n                }\r\n                else{\r\n                    result.message=\"Password errada.\"\r\n                }\r\n            }\r\n            else{\r\n                res.jsonp(result)\r\n            }\r\n        })\r\n        .catch(erro => res.status(500).jsonp(erro))\r\n    });\r\n\r\n\r\n\r\nrouter.put('/update/:idApostador',function(req,res){\r\n    Apostador.update(req.params.idApostador,req.body)\r\n        .then(apostador => res.jsonp(apostador))\r\n        .catch(erro => res.status(500).jsonp(erro))\r\n    });\r\n\r\n    /*\r\n//Login\r\n//display login page\r\nrouter.get('/', function(req, res, next){    \r\n    // render to views/user/add.ejs\r\n    res.render('auth/login', {\r\n        title: 'Login',\r\n        email: '',\r\n        password: ''     \r\n    })\r\n})\r\n \r\n//display login page\r\nrouter.get('/login', function(req, res, next){    \r\n    // render to views/user/add.ejs\r\n    res.render('auth/login', {\r\n        title: 'Login',\r\n        email: '',\r\n        password: ''    \r\n    })\r\n})\r\n\r\n//authenticate user\r\nrouter.post('/authentication', function(req, res, next) {\r\n       \r\n    var email = req.body.email;\r\n    var password = req.body.password;\r\n \r\n        connection.query('SELECT * FROM apostador WHERE email = ? AND password = ?', [email, password], function(err, rows, fields) {\r\n            if(err) throw err\r\n             \r\n            // if user not found\r\n            if (rows.length <= 0) {\r\n                req.flash('error', 'Please correct enter email and Password!')\r\n                res.redirect('/login')\r\n            }\r\n            else { // if user found\r\n                // render to views/user/edit.ejs template file\r\n                req.session.loggedin = true;\r\n                req.session.name = name;\r\n                res.redirect('/home');\r\n \r\n            }            \r\n        })\r\n  \r\n})\r\n \r\n//display home page\r\nrouter.get('/home', function(req, res, next) {\r\n    if (req.session.loggedin) {\r\n         \r\n        res.render('auth/home', {\r\n            title:\"Dashboard\",\r\n            name: req.session.name,     \r\n        });\r\n \r\n    } else {\r\n \r\n        req.flash('success', 'Please login first!');\r\n        res.redirect('/login');\r\n    }\r\n});\r\n\r\n// Logout user\r\nrouter.get('/logout', function (req, res) {\r\n    req.session.destroy();\r\n    req.flash('success', 'Login Again Here');\r\n    res.redirect('/login');\r\n  });\r\n*/\r\nmodule.exports=router;"
        }
    ]
}